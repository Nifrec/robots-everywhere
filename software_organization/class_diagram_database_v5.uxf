<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1296</x>
      <y>312</y>
      <w>216</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>*Variable*
--
- var_type: Class
- name: str
--
+ get_type(): Class
+ get_name(): str
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1692</x>
      <y>516</y>
      <w>480</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>*DatabaseWriter*
--
- conn: Connection
- variables: Set[Variable]
--
+ get_variables() -&gt; Iterable[Variable]
+ execute_sql(sql_command: str)
+ execute_query(sql_command: str): List[Tuple]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>852</x>
      <y>1548</y>
      <w>528</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*QuestionSchedule*
--
- active_occurences:   Dict[int, QuestionOccurence]
- snoozed_occurences:  Dict[int, QuestionOccurence]
- finished_occurences: Dict[int, QuestionOccurence]
- prev_refresh_timestamp: float
- timeout_time: float

- question_sets: Set[ReoccuringQuestionSet]
- formulator: Formulator
--
+ get_active_occurences(): Set[QuestionOccurence]

+ register_answered(id: int)
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1380</x>
      <y>432</y>
      <w>336</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ variables</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;260.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1440</y>
      <w>708</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*RecurringQuestionSet*
--
- days: Set[WeekDay]
- hour: int
- minutes: int
- variables: Set[Variable]
--
+ get_days(): Set[WeekDay]
+ get_hour(): int
+ get_minutes(): int
+ get_variables(): Set[Variable]
+ is_due(current_time: float, previous_check: float): bool
+ generate_questions(formulator: Formulator): Set[QuestionOccurence]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>360</y>
      <w>144</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
*WeekDay*
--
Monday: 0
Tuesday: 1
Wednesday: 2
Thursday: 3
Friday: 4
Saturday: 5
Sunday: 6
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>636</x>
      <y>480</y>
      <w>156</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
*QuestionStatus*
--
unanswered: 0
answered: 1
snoozed: 2
cancelled: 3
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>948</x>
      <y>1224</y>
      <w>420</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>*QuestionOccurence*
--
- status: QuestionStatus
- questions: Question
- snooze_time: int = 0
- id: int
--
+ get_id(): int
+ get_status(): QuestionStatus

+ set_status(new_status: QuestionStatus)
+ snooze(minutes: int)
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>1224</y>
      <w>276</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>*Question*
--
- content: str
- variable: Variable
--
+ get_content(): str
+ get_variable(): Variable
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>1272</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ questions</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1812</x>
      <y>768</y>
      <w>288</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*Command*/
--
- is_executed: bool = False
- db_writer: DatabaseWriter
--
+ execute()
+ get_is_executed(): bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1812</x>
      <y>1296</y>
      <w>288</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*InsertCommand*
--
- is_executed: bool = False
- db_writer: DatabaseWriter
- id: in
- variable: Variable
- timestamp: int
- new_value: Any
--
+ get_is_executed(): bool
+ get_id()

+ execute()
+ undo()
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1944</x>
      <y>660</y>
      <w>48</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1944</x>
      <y>1236</y>
      <w>36</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>288</x>
      <y>360</y>
      <w>1032</w>
      <h>1104</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ variables</panel_attributes>
    <additional_attributes>840.0;10.0;10.0;470.0;10.0;900.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>1524</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1116</x>
      <y>1440</y>
      <w>48</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1416</x>
      <y>1788</y>
      <w>492</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*BackendQuestioner*
--
- executed_commands: List[Command]
- undone_commands: List[Command]
- schedule: QuestionSchedule
- db_writer: DatabaseWriter
--
+ get_active_questions(): Set[Question]

+ mainloop(pipe: multiprocessing.Pipe)
- add_new_variable(var: Variable)
- store_answer(answer: Answer)
- register_incoming_answers(): Iterable[Answer]
- send_questions(questions: Set[Question])
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>828</x>
      <y>1104</y>
      <w>636</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Only allow sets of questions to be done together?
(Can always just use a single question in QuestionOccurence,
but we could enforce this)
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1944</x>
      <y>1596</y>
      <w>468</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*Answer*
--
- id: str
- timestamp: float
- variable: Variable
- value: variable.var_type
--
+ get_id(): int
+ get_value(): Any
+ extract_command(db_writer: DatabaseWriter):
                                InsertCommand
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>1800</y>
      <w>288</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1992</x>
      <y>2460</y>
      <w>624</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>GUI Process
--

bg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2304</x>
      <y>2580</y>
      <w>48</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>*GUI*
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1608</x>
      <y>2040</y>
      <w>108</w>
      <h>324</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;70.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1632</x>
      <y>660</y>
      <w>168</w>
      <h>1152</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>110.0;10.0;110.0;140.0;10.0;240.0;10.0;940.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1176</x>
      <y>240</y>
      <w>420</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Type is a reserved keyword in Python
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>96</x>
      <y>1812</y>
      <w>468</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>*Formulator*
--
+ formulate_question(variable: Variable): str
          
style=autoresize
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>552</x>
      <y>1800</y>
      <w>372</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;50.0;30.0;50.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2508</x>
      <y>576</y>
      <w>1104</w>
      <h>1308</h>
    </coordinates>
    <panel_attributes>Output Production Process
--
layer=-1
fg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1812</x>
      <y>1020</y>
      <w>288</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*ReversibleCommand*/
--
- is_executed: bool = False
- db_writer: DatabaseWriter
- id: int
--
+ get_is_executed(): bool
+ get_id(): int

+ execute()
+ undo()
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1944</x>
      <y>912</y>
      <w>36</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>0</y>
      <w>480</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>/Red means uncertain/major revision needed/
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>36</y>
      <w>480</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/Pink means it is a suggestion/
/but maybe not necessary/
bg=pink
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2628</x>
      <y>1476</y>
      <w>408</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>*OutputInvoker*
--
- rules: Iterable[Rule]
--
+ mainloop(pipe: multiprocessing.Pipe)
- find_invoked_rules(): Iterable[Rule]
- invoke_rules(): 
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1752</x>
      <y>2172</y>
      <w>588</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>We will probably need to use multiprocessing.
Perhaps a 'Pipe' to send data between processes.
Here it will be used to exchange Questions and Answers.
The BackendQuestioner will be able to match a Question
to its Answer via their ID.

For commands such as undo or adding a variable
we can make new classes. Then the BackendQuestioner
can just extract stuff from the pipe,
and check the type of the object (answer, new var, undo)
to figure out what needs to be done with it.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>3228</x>
      <y>1152</y>
      <w>348</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>After firing,
only becomes fireable again
when new changes occur in the 
database that make the rule fire.
Otherwise the same output would
be generated indifferently.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3204</x>
      <y>1620</y>
      <w>216</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*OutputTextGenerator*
--
- state: Tensor
--
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3132</x>
      <y>1404</y>
      <w>432</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*torch.nn.Module*/
--
--
+ get_named_parameters(): Iterable[Tuple]
+ get_parameters(): Iterable[Parameter]
+ forward(x: Tensor): Tensor
bg=gray
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3300</x>
      <y>1524</y>
      <w>36</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2916</x>
      <y>1272</y>
      <w>156</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
rules</panel_attributes>
    <additional_attributes>70.0;10.0;70.0;130.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3024</x>
      <y>1560</y>
      <w>204</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
generator</panel_attributes>
    <additional_attributes>150.0;80.0;60.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>876</x>
      <y>1860</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Questions are stores in a dict
that maps the ID of an Occurence
to the QuestionOccurence itself.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1380</x>
      <y>1332</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Status superfluous?
Snooze needs revision?
style=autoresize
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1668</x>
      <y>2340</y>
      <w>72</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*Pipe*
bg=cyan
style=autoresize
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1692</x>
      <y>2388</y>
      <w>636</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>510.0;180.0;170.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2784</x>
      <y>2316</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>*Pipe*
bg=cyan
style=autoresize
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2340</x>
      <y>2364</y>
      <w>504</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;200.0;390.0;200.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2796</x>
      <y>1596</y>
      <w>48</w>
      <h>744</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;600.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>972</y>
      <w>2424</w>
      <h>1176</h>
    </coordinates>
    <panel_attributes>Data Gather Process
--
layer=-1
fg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2508</x>
      <y>408</y>
      <w>660</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*DatabaseReader*
--
- conn: Connection
--
+ get_values_var(var: Variable) -&gt; ndarray
+ get_vars_dict(vars: Iterable[Variable]) -&gt; Dict[str, ndarray]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2748</x>
      <y>1152</y>
      <w>444</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>*Rule*
--
- trigger: TriggerExpression
- messager: MessageExpression
--
+ check_fireable(db: DatabaseReader): bool
+ fire(db: DatabaseReader): float
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2772</x>
      <y>636</y>
      <w>468</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*RuleExpression*/
--
- expression: str
- variables: Set[Variable]
--
+ get_variables() -&gt; Set[Variable]
+ __call__(db: DatabaseReader): Any
# _hook_check_output_value(output: Any): bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2748</x>
      <y>900</y>
      <w>288</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*TriggerExpression*
--
--
# _hook_check_output_value(
         output: Any): bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3072</x>
      <y>900</y>
      <w>288</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*MessageExpression*
--
--
# _hook_check_output_value(
         output: Any): bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2868</x>
      <y>792</y>
      <w>156</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;110.0;40.0;10.0;40.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2988</x>
      <y>816</y>
      <w>252</w>
      <h>108</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;190.0;20.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2832</x>
      <y>984</y>
      <w>156</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3048</x>
      <y>984</y>
      <w>192</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2664</x>
      <y>516</y>
      <w>132</w>
      <h>984</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;750.0;90.0;800.0</additional_attributes>
  </element>
</diagram>
