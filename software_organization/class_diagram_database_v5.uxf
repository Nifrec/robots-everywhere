<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>408</x>
      <y>198</y>
      <w>54</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>*Variable*
--
- var_type: Class
- name: str
--
+ get_type(): Class
+ get_name(): str
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>507</x>
      <y>249</y>
      <w>120</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>*DatabaseWriter*
--
- conn: Connection
- variables: Set[Variable]
--
+ get_variables() -&gt; Iterable[Variable]
+ execute_sql(sql_command: str)
+ execute_query(sql_command: str): List[Tuple]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>297</x>
      <y>507</y>
      <w>132</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>*QuestionSchedule*
--
- active_occurences:   Dict[int, QuestionOccurence]
- snoozed_occurences:  Dict[int, QuestionOccurence]
- finished_occurences: Dict[int, QuestionOccurence]
- prev_refresh_timestamp: float
- timeout_time: float

- question_sets: Set[ReoccuringQuestionSet]
- formulator: Formulator
--
+ get_active_occurences(): Set[QuestionOccurence]

+ register_answered(id: int)
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>429</x>
      <y>228</y>
      <w>84</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ variables</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;260.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>480</y>
      <w>177</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>*RecurringQuestionSet*
--
- days: Set[WeekDay]
- hour: int
- minutes: int
- variables: Set[Variable]
--
+ get_days(): Set[WeekDay]
+ get_hour(): int
+ get_minutes(): int
+ get_variables(): Set[Variable]
+ is_due(current_time: float, previous_check: float): bool
+ generate_questions(formulator: Formulator): Set[QuestionOccurence]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>294</x>
      <y>210</y>
      <w>36</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
*WeekDay*
--
Monday: 0
Tuesday: 1
Wednesday: 2
Thursday: 3
Friday: 4
Saturday: 5
Sunday: 6
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>243</x>
      <y>240</y>
      <w>39</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
*QuestionStatus*
--
unanswered: 0
answered: 1
snoozed: 2
cancelled: 3
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>321</x>
      <y>426</y>
      <w>105</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>*QuestionOccurence*
--
- status: QuestionStatus
- questions: Question
- snooze_time: int = 0
- id: int
--
+ get_id(): int
+ get_status(): QuestionStatus

+ set_status(new_status: QuestionStatus)
+ snooze(minutes: int)
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>426</y>
      <w>69</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>*Question*
--
- content: str
- variable: Variable
--
+ get_content(): str
+ get_variable(): Variable
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>282</x>
      <y>438</y>
      <w>45</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ questions</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>537</x>
      <y>312</y>
      <w>72</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*Command*/
--
- is_executed: bool = False
- db_writer: DatabaseWriter
--
+ execute()
+ get_is_executed(): bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>537</x>
      <y>444</y>
      <w>72</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>*InsertCommand*
--
- is_executed: bool = False
- db_writer: DatabaseWriter
- id: in
- variable: Variable
- timestamp: int
- new_value: Any
--
+ get_is_executed(): bool
+ get_id()

+ execute()
+ undo()
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>285</y>
      <w>12</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>429</y>
      <w>9</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>156</x>
      <y>210</y>
      <w>258</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
+ variables</panel_attributes>
    <additional_attributes>840.0;10.0;10.0;470.0;10.0;900.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>258</x>
      <y>501</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>363</x>
      <y>480</y>
      <w>12</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>438</x>
      <y>567</y>
      <w>123</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>*BackendQuestioner*
--
- executed_commands: List[Command]
- undone_commands: List[Command]
- schedule: QuestionSchedule
- db_writer: DatabaseWriter
--
+ get_active_questions(): Set[Question]

+ mainloop(pipe: multiprocessing.Pipe)
- add_new_variable(var: Variable)
- store_answer(answer: Answer)
- register_incoming_answers(): Iterable[Answer]
- send_questions(questions: Set[Question])
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>291</x>
      <y>396</y>
      <w>159</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>Only allow sets of questions to be done together?
(Can always just use a single question in QuestionOccurence,
but we could enforce this)
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>519</y>
      <w>117</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>*Answer*
--
- id: str
- timestamp: float
- variable: Variable
- value: variable.var_type
--
+ get_id(): int
+ get_value(): Any
+ extract_command(db_writer: DatabaseWriter):
                                InsertCommand
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>372</x>
      <y>570</y>
      <w>72</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>582</x>
      <y>735</y>
      <w>156</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>GUI Process
--

bg=gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>765</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>*GUI*
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>486</x>
      <y>630</y>
      <w>27</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0;70.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>285</y>
      <w>42</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>110.0;10.0;110.0;140.0;10.0;240.0;10.0;940.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>378</x>
      <y>180</y>
      <w>105</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Type is a reserved keyword in Python
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>108</x>
      <y>573</y>
      <w>117</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>*Formulator*
--
+ formulate_question(variable: Variable): str
          
style=autoresize
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>222</x>
      <y>570</y>
      <w>93</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;50.0;30.0;50.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>711</x>
      <y>270</y>
      <w>276</w>
      <h>321</h>
    </coordinates>
    <panel_attributes>Output Production Process
--
layer=-1
fg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>537</x>
      <y>375</y>
      <w>72</w>
      <h>57</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*ReversibleCommand*/
--
- is_executed: bool = False
- db_writer: DatabaseWriter
- id: int
--
+ get_is_executed(): bool
+ get_id(): int

+ execute()
+ undo()
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>348</y>
      <w>9</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>120</y>
      <w>120</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>/Red means uncertain/major revision needed/
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>240</x>
      <y>129</y>
      <w>120</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>/Pink means it is a suggestion/
/but maybe not necessary/
bg=pink
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>741</x>
      <y>489</y>
      <w>102</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>*OutputInvoker*
--
- rules: Iterable[Rule]
--
+ mainloop(pipe: multiprocessing.Pipe)
- find_invoked_rules(): Iterable[Rule]
- invoke_rules(): 
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>522</x>
      <y>663</y>
      <w>147</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>We will probably need to use multiprocessing.
Perhaps a 'Pipe' to send data between processes.
Here it will be used to exchange Questions and Answers.
The BackendQuestioner will be able to match a Question
to its Answer via their ID.

For commands such as undo or adding a variable
we can make new classes. Then the BackendQuestioner
can just extract stuff from the pipe,
and check the type of the object (answer, new var, undo)
to figure out what needs to be done with it.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>891</x>
      <y>408</y>
      <w>87</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>After firing,
only becomes fireable again
when new changes occur in the 
database that make the rule fire.
Otherwise the same output would
be generated indifferently.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>525</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>*OutputTextGenerator*
--
- state: Tensor
--
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>867</x>
      <y>471</y>
      <w>108</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*torch.nn.Module*/
--
--
+ get_named_parameters(): Iterable[Tuple]
+ get_parameters(): Iterable[Parameter]
+ forward(x: Tensor): Tensor
bg=gray
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>909</x>
      <y>501</y>
      <w>9</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>813</x>
      <y>444</y>
      <w>39</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
rules</panel_attributes>
    <additional_attributes>70.0;10.0;70.0;110.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>510</y>
      <w>51</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*
generator</panel_attributes>
    <additional_attributes>150.0;80.0;60.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>303</x>
      <y>585</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>Questions are stores in a dict
that maps the ID of an Occurence
to the QuestionOccurence itself.
style=autoresize
bg=#f5df9a</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>429</x>
      <y>453</y>
      <w>60</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Status superfluous?
Snooze needs revision?
style=autoresize
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>501</x>
      <y>705</y>
      <w>18</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>*Pipe*
bg=cyan
style=autoresize
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>507</x>
      <y>717</y>
      <w>159</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>510.0;180.0;170.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>699</y>
      <w>15</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>*Pipe*
bg=cyan
style=autoresize
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>669</x>
      <y>711</y>
      <w>126</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;200.0;390.0;200.0;390.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>783</x>
      <y>519</y>
      <w>12</w>
      <h>186</h>
    </coordinates>
    <panel_attributes>lt=&lt;-&gt;
m1=1
m2=1
fg=blue</panel_attributes>
    <additional_attributes>10.0;600.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>84</x>
      <y>363</y>
      <w>606</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>Data Gather Process
--
layer=-1
fg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>711</x>
      <y>222</y>
      <w>165</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>*DatabaseReader*
--
- conn: Connection
--
+ get_values_var(var: Variable) -&gt; ndarray
+ get_vars_dict(vars: Iterable[Variable]) -&gt; Dict[str, ndarray]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>408</y>
      <w>87</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*Rule*/
--
- trigger: TriggerExpression
- messager: MessageExpression
--
+ check_fireable(): bool
+ fire(db: DatabaseReader): float
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>795</x>
      <y>279</y>
      <w>75</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Abstract&gt;&gt;
/*RuleExpression*/
--
- expression: str
- variables: Tuple[Variable]
--
+ __forward__(): Any
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>765</x>
      <y>342</y>
      <w>57</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>*TriggerExpression*
--
- expression: str
--
+ __forward()__: bool
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>846</x>
      <y>342</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>*MessageExpression*
--
- expression: str
--
+ __forward()__: float
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>789</x>
      <y>309</y>
      <w>51</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;150.0;70.0;10.0;70.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>831</x>
      <y>324</y>
      <w>51</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;150.0;20.0;150.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>786</x>
      <y>363</y>
      <w>48</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>831</x>
      <y>363</y>
      <w>51</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>249</y>
      <w>33</w>
      <h>246</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;750.0;90.0;800.0</additional_attributes>
  </element>
</diagram>
